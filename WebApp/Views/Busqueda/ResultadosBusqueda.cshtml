@model LibreriaClases.DTO.DTOContenedorResultadosBusqueda
@{
    ViewBag.Title = "ResultadosBusqueda";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{

    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 500px;
            width: 100%;
        }
        /* Optional: Makes the sample page fill the window. */

    </style>
}
<div class="container">
    @if (Model.propiedades.Count() == 0)
    {
    <div class="alert alert-info">
        <p>No se han encontrado resultados.</p>
    </div>
        
    }
    else
    {
<div class="mt-5 mb-5">
    <h4>Resultados de búsqueda</h4>
    <p class="text-success">Se han encontrado <b>@Model.propiedades.Count()</b> resultados</p>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                Visualizar en el mapa
            </button>
            <div class="collapse" id="collapseExample">
                <div class="card card-body">
                    <div id="map" class="img-fluid img-thumbnail">

                    </div>
                </div>
            </div>
        </div>
    </div>
    
</div>
        
        
        foreach (var propiedad in Model.propiedades)
        {
            <div class="card bg-light border-dark">
                <div class="card-header border-dark">
                    <h6>@propiedad.tipoPropiedad en (@propiedad.tipoPublicacion)</h6>
                </div>
                <div class="card-body bg-light">
                    <div class="row">
                        <div class="col-md-3">
                            <img src="@propiedad.imagen" class="img-fluid img-thumbnail" />
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col">
                                    <label>Ubicación: <b>@propiedad.ubicación</b></label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>Fecha de publicación: <b>@propiedad.fechaInicioPublicacion</b></label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>Precio: <b>(@propiedad.tipoMoneda) $@propiedad.precioPropiedad</b></label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <label>Publicante: <b>@propiedad.tipoPublicante</b></label>
                                </div>
                                
                            </div>
                        </div>
                        <div class="col-md-3 text-right">
                            @Html.ActionLink("Visitar", "VisitarPublicacion", "VisitaInmueble", new {publicacionId=propiedad.publicacionId }, new { @class = "btn btn-md btn-outline-success" })
                        </div>
                    </div>
                </div>

            </div>
            <hr />
        }

        
    }
</div>


@section scripts{
    <script>

        function initMap() {
            var modelo = @Html.Raw(Json.Encode(Model));
            var icono;
            var infoWindows = [];
            var markers = [];
            var myLatLng = { lat: modelo.pinchesGoogleMaps[0].latitud, lng: modelo.pinchesGoogleMaps[0].longitud };
            var publicacionId;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: myLatLng
            });

            for (var i = 0; i < modelo.pinchesGoogleMaps.length; i++) {
                publicacionId = modelo.pinchesGoogleMaps[i].publicacionId;
                var link = '@Html.ActionLink("Ir al inmueble","VisitarPublicacion", "VisitaInmueble",new { publicacionId = "-1"},null)';
                link = link.replace("-1", publicacionId);

                infoWindows.push(contenidoInfoWindow);
                switch (modelo.pinchesGoogleMaps[i].tipoPropiedad) {
                    case "Casa":
                        icono = "/Icons/casaIcono.png";
                        break;
                    case "Departamento":
                        icono = "/Icons/departamentoIcono.png";
                        break;
                    case "Oficina":
                        icono = "/Icons/edificioIcono.png";
                        break;
                    default:
                        icono = "/Icons/casaIcono.png";
                        break;
                }
                var precio = modelo.pinchesGoogleMaps[i].precioPropiedad
                var marker = new google.maps.Marker({
                    draggable: false,

                    position: { lat: modelo.pinchesGoogleMaps[i].latitud, lng: modelo.pinchesGoogleMaps[i].longitud },
                    map: map,

                    title: modelo.pinchesGoogleMaps[i].tipoPropiedad + ' ' + modelo.pinchesGoogleMaps[i].ubicacion + ' ' + modelo.pinchesGoogleMaps[i].precioPropiedad,
                    icon: icono

                });
                markers.push(marker);
                var infowindow = new google.maps.InfoWindow();
                var contenidoInfoWindow = '<div id="content">' +
                    '<div id="siteNotice">' +
                    '</div>' +
                    '<h1 id="firstHeading" class="firstHeading">' + modelo.pinchesGoogleMaps[i].tipoMoneda + ' ' + modelo.pinchesGoogleMaps[i].precioPropiedad + '</h1>' +
                    '<div id="bodyContent">' +
                    '<h4><b>' + modelo.pinchesGoogleMaps[i].tipoPropiedad + '</b></h4>' +
                    '<h4>' + modelo.pinchesGoogleMaps[i].ubicacion + '</h2>' +
                    '<h4> ' + link + '</h4>' +
                    '</div>' +
                    '</div>';


                google.maps.event.addListener(marker, 'click', (function (marker, contenidoInfoWindow, infowindow) {
                    return function () {
                        infowindow.setContent(contenidoInfoWindow);
                        infowindow.open(map, marker);
                    };
                })(marker, contenidoInfoWindow, infowindow));

            }



        }
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDHXJNkL77-_eh9GRL1pZr1EAHrAh_uQR4&callback=initMap">
    </script>
}
