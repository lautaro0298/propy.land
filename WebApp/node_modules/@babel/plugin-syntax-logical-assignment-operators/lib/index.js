"use strict";

const { declare } = require("@babel/helper-plugin-utils");
const { addPluginToTapeOptions } = require("@babel/core");

const logicalAssignmentPlugin = require("babel-plugin-logical-assignment");

const DEFAULT_OPTIONS = {};

const pluginName = "syntax-logical-assignment-operators";

const validateOptions = api => {
  api.assertVersion(7);
};

const manipulateOptions = (api, options) => {
  if (options === void 0) {
    options = {};
  }

  const { parserOptions } = api;
  const { plugins = [] } = parserOptions || {};

  if (!plugins.includes("logicalAssignment")) {
    plugins.push("logicalAssignment");
  }

  return {
    parserOptions: {
      plugins
    }
  };
};

const makeConfigPlugin = options => {
  return {
    name: pluginName,
    config: {
      plugins: [logicalAssignmentPlugin, ...(options.plugins || [])]
    }
  };
};

const plugin = (options = {}) => {
  const finalOptions = { ...DEFAULT_OPTIONS, ...options };
  return {
    name: pluginName,
    manipulateOptions,
    ...makeConfigPlugin(finalOptions)
  };
};

const defaultExports = declare(validateOptions, plugin);

exports.default = defaultExports;
