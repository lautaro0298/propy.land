!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require("react")) : "function" == typeof define && define.amd ? define(["react"], t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).GooglePayButton = t(e.React)
}(this, (function(e) {
    "use strict";
    function t(e) {
        return e && "object" == typeof e && "default" in e ? e : {
            default: e
        }
    }
    var n = t(e);

    // ... rest of the code ...

    const l = e => {
        try {
            return this.client.isReadyToPay(this.createIsReadyToPayRequest(this.config))
        } catch (e) {
            return this.config.onError ? this.config.onError(e) : console.error(e), {}
        }
    };

    // ... rest of the code ...

    const r = "google-pay-button-container";

    class GooglePayButton extends n.default.Component {
        constructor() {
            super(...arguments), this.manager = new s({
                cssSelector: "." + r,
                softwareInfoId: "@google-pay/button-react",
                softwareInfoVersion: "3.0.0"
            }), this.elementRef = n.default.createRef()
        }

        // ... rest of the code ...

        componentDidMount() {
            const e = this.elementRef.current;
            e && (this.manager.mount(e), this.manager.configure(this.props))
        }

        // ... rest of the code ...
    }
    return GooglePayButton
}));
